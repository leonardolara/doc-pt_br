<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ddb05f8827151e25dd1c3e058f95f6c024bc881b Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.bcround" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>bcround</refname>
  <refpurpose>Arredonda número de precisão arbitrária</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>bcround</methodname>
   <methodparam><type>string</type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>precision</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>RoundingMode</type><parameter>mode</parameter><initializer>RoundingMode::HalfAwayFromZero</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Retorna o valor arredondado de <parameter>num</parameter> para a
   precisão informada em <parameter>precision</parameter>
   (número de dígitos após o separador decimal).
   <parameter>precision</parameter> também pode ser negativo ou zero (padrão).
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.round')/db:refsect1[@role='parameters']/descendant::db:varlistentry[1])" />
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.round')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
     <simpara>
      Especifica o modo de arredondamento.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Retorna uma string numérica representando <parameter>num</parameter> arredondado para a precisão especificada.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Esta função lança uma exceção <exceptionname>ValueError</exceptionname> nos seguintes casos:
   <simplelist>
    <member><parameter>num</parameter> não é uma string numérica BCMath bem formada.</member>
    <member><parameter>scale</parameter> está fora do intervalo válido.</member>
   </simplelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
   <example>
   <title>Exemplos de <function>bcround</function></title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(bcround('3.4'));
var_dump(bcround('3.5'));
var_dump(bcround('3.6'));
var_dump(bcround('3.6', 0));
var_dump(bcround('5.045', 2));
var_dump(bcround('5.055', 2));
var_dump(bcround('345', -2));
var_dump(bcround('345', -3));
var_dump(bcround('678', -2));
var_dump(bcround('678', -3));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
string(1) "3"
string(1) "4"
string(1) "4"
string(1) "4"
string(4) "5.05"
string(4) "5.06"
string(3) "300"
string(1) "0"
string(3) "700"
string(4) "1000"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemplo de uso de <function>bcround</function> com diferentes valores de <parameter>precision</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
$number = '123.45';

var_dump(bcround($number, 3));
var_dump(bcround($number, 2));
var_dump(bcround($number, 1));
var_dump(bcround($number, 0));
var_dump(bcround($number, -1));
var_dump(bcround($number, -2));
var_dump(bcround($number, -3));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
string(7) "123.450"
string(6) "123.45"
string(5) "123.5"
string(3) "123"
string(3) "120"
string(3) "100"
string(1) "0"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemplo de uso de <function>bcround</function> com diferentes valores de <parameter>mode</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
echo 'Modos de arredondamento com 9.5' . PHP_EOL;
var_dump(bcround('9.5', 0, RoundingMode::HalfAwayFromZero));
var_dump(bcround('9.5', 0, RoundingMode::HalfTowardsZero));
var_dump(bcround('9.5', 0, RoundingMode::HalfEven));
var_dump(bcround('9.5', 0, RoundingMode::HalfOdd));
var_dump(bcround('9.5', 0, RoundingMode::TowardsZero));
var_dump(bcround('9.5', 0, RoundingMode::AwayFromZero));
var_dump(bcround('9.5', 0, RoundingMode::NegativeInfinity));
var_dump(bcround('9.5', 0, RoundingMode::PositiveInfinity));

echo PHP_EOL;
echo 'Modos de arredondamento com 8.5' . PHP_EOL;
var_dump(bcround('8.5', 0, RoundingMode::HalfAwayFromZero));
var_dump(bcround('8.5', 0, RoundingMode::HalfTowardsZero));
var_dump(bcround('8.5', 0, RoundingMode::HalfEven));
var_dump(bcround('8.5', 0, RoundingMode::HalfOdd));
var_dump(bcround('8.5', 0, RoundingMode::TowardsZero));
var_dump(bcround('8.5', 0, RoundingMode::AwayFromZero));
var_dump(bcround('8.5', 0, RoundingMode::NegativeInfinity));
var_dump(bcround('8.5', 0, RoundingMode::PositiveInfinity));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
Modos de arredondamento com 9.5
string(2) "10"
string(1) "9"
string(2) "10"
string(1) "9"
string(1) "9"
string(2) "10"
string(1) "9"
string(2) "10"

Modos de arredondamento com 8.5
string(1) "9"
string(1) "8"
string(1) "8"
string(1) "9"
string(1) "8"
string(1) "9"
string(1) "8"
string(1) "9"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemplo de uso de <function>bcround</function> com diferentes valores de <parameter>mode</parameter>
    ao especificar <parameter>precision</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
echo 'Usando RoundingMode::HalfAwayFromZero com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfAwayFromZero));
var_dump(bcround(-1.55, 1, RoundingMode::HalfAwayFromZero));

echo PHP_EOL;
echo 'Usando RoundingMode::HalfTowardsZero com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfTowardsZero));
var_dump(bcround(-1.55, 1, RoundingMode::HalfTowardsZero));

echo PHP_EOL;
echo 'Usando RoundingMode::HalfEven com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfEven));
var_dump(bcround(-1.55, 1, RoundingMode::HalfEven));

echo PHP_EOL;
echo 'Usando RoundingMode::HalfOdd com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfOdd));
var_dump(bcround(-1.55, 1, RoundingMode::HalfOdd));

echo PHP_EOL;
echo 'Usando RoundingMode::TowardsZero com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::TowardsZero));
var_dump(bcround(-1.55, 1, RoundingMode::TowardsZero));

echo PHP_EOL;
echo 'Usando RoundingMode::AwayFromZero com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::AwayFromZero));
var_dump(bcround(-1.55, 1, RoundingMode::AwayFromZero));

echo PHP_EOL;
echo 'Usando RoundingMode::NegativeInfinity com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::NegativeInfinity));
var_dump(bcround(-1.55, 1, RoundingMode::NegativeInfinity));

echo PHP_EOL;
echo 'Usando RoundingMode::PositiveInfinity com precisão de 1 dígito decimal' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::PositiveInfinity));
var_dump(bcround(-1.55, 1, RoundingMode::PositiveInfinity));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
Usando RoundingMode::HalfAwayFromZero com precisão de 1 dígito decimal
string(3) "1.6"
string(4) "-1.6"

Usando RoundingMode::HalfTowardsZero com precisão de 1 dígito decimal
string(3) "1.5"
string(4) "-1.5"

Usando RoundingMode::HalfEven com precisão de 1 dígito decimal
string(3) "1.6"
string(4) "-1.6"

Usando RoundingMode::HalfOdd com precisão de 1 dígito decimal
string(3) "1.5"
string(4) "-1.5"

Usando RoundingMode::TowardsZero com precisão de 1 dígito decimal
string(3) "1.5"
string(4) "-1.5"

Usando RoundingMode::AwayFromZero com precisão de 1 dígito decimal
string(3) "1.6"
string(4) "-1.6"

Usando RoundingMode::NegativeInfinity com precisão de 1 dígito decimal
string(3) "1.5"
string(4) "-1.6"

Usando RoundingMode::PositiveInfinity com precisão de 1 dígito decimal
string(3) "1.6"
string(4) "-1.5"
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcceil</function></member>
   <member><function>bcfloor</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
